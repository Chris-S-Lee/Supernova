<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8" />
  <title>노트북 대여 시스템</title>
  <link rel="stylesheet" href="/public/status_styles.css" />
  <style>
    .calendar-cell.past {
      position: relative;
      background-color: #f0f0f0;
      opacity: 0.6;
    }
    .calendar-cell.past::after {
      content: "지난 날짜";
      position: absolute;
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0,0,0,0.5);
      color: white;
      padding: 4px 10px;
      border-radius: 4px;
      font-size: 14px;
    }
  </style>
</head>
<body>
  <%- include("header.ejs") %>

  <div class="calendar">
    <div class="calendar-header">
      <button id="prev-week">〈</button>
      <span id="week-range">7월 1일 ~ 7월 7일</span>
      <button id="next-week">〉</button>
    </div>
    <table class="calendar-table">
      <thead>
        <tr>
          <th>월</th><th>화</th><th>수</th><th>목</th><th>금</th>
        </tr>
      </thead>
      <tbody>
        <tr id="calendar-row">
          <!-- JS에서 채워짐 -->
        </tr>
      </tbody>
    </table>
  </div>

  <%- include("footer.ejs") %>

  <script>
    const borrowData = JSON.parse('<%- borrowData %>');

    const calendarRow = document.getElementById("calendar-row");
    const weekRange = document.getElementById("week-range");
    const prevBtn = document.getElementById("prev-week");
    const nextBtn = document.getElementById("next-week");

    let currentDate = new Date();

    function formatDate(date) {
      const y = date.getFullYear();
      const m = String(date.getMonth() + 1).padStart(2, "0");
      const d = String(date.getDate()).padStart(2, "0");
      return `${y}-${m}-${d}`;
    }

    function renderWeek(date) {
      calendarRow.innerHTML = "";

      const startOfWeek = new Date(date);
      startOfWeek.setDate(startOfWeek.getDate() - ((startOfWeek.getDay() + 6) % 7));

      const days = [];
      for (let i = 0; i < 7; i++) {
        const d = new Date(startOfWeek);
        d.setDate(startOfWeek.getDate() + i);
        const dow = d.getDay();
        if (dow >= 1 && dow <= 5) days.push(d);
      }

      const labelStart = `${days[0].getFullYear()}년 ${days[0].getMonth() + 1}월 ${days[0].getDate()}일`;
      const labelEnd = `${days[days.length - 1].getFullYear()}년 ${days[days.length - 1].getMonth() + 1}월 ${days[days.length - 1].getDate()}일`;
      weekRange.textContent = `${labelStart} ~ ${labelEnd}`;

      const today = new Date();
      today.setHours(0, 0, 0, 0);

      for (const d of days) {
        const key = formatDate(d);
        const dayData = borrowData[key] || {};

        const td = document.createElement("td");
        td.classList.add("calendar-cell");

        const 오전List = (dayData.오전 || []).map(n => `<li>${n.name}</li>`).join("") || "<li>-</li>";
        const 오후List = (dayData.오후 || []).map(n => `<li>${n.name}</li>`).join("") || "<li>-</li>";

        td.innerHTML = `
          <div class="cell-header">${d.getMonth() + 1}월 ${d.getDate()}일</div>
          <div class="session">
            <strong>오전</strong>
            <ul>${오전List}</ul>
          </div>
          <div class="session">
            <strong>오후</strong>
            <ul>${오후List}</ul>
          </div>
        `;

        if (d < today) {
          td.classList.add("past");
        }

        calendarRow.appendChild(td);
      }

      currentDate = new Date(days[0]);
    }

    renderWeek(currentDate);

    prevBtn.addEventListener("click", () => {
      currentDate.setDate(currentDate.getDate() - 7);
      renderWeek(currentDate);
    });

    nextBtn.addEventListener("click", () => {
      currentDate.setDate(currentDate.getDate() + 7);
      renderWeek(currentDate);
    });
  </script>
</body>
</html>